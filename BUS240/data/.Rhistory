10*3
30L
alt <- 77
install.packages("tidyverse")
a<- 10
b <- 20
a<- 10
b <- 20
a<- 10
b <- 20
club_title <- c("Chess Club")
club_description <- c("Meets two nights a week for members to play chess. Snacks are provided.")
club_dues <- c(50, 20, 15)
meeting_days <- c("Monday", "Wednesday")
meeting_times <- c("6:00 pm", "8:00 pm")
# Type your code below
club_meetings <- rbind(meeting_days,meeting_times)
chess_club <- list(club_title,club_description,club_dues,club_meetings)
chess_club
chess_club[2]
chess_club[[2]]
install.packages("rmarkdown")
plot(cars)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
x = 5
x <5
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
summary(cars)
summary(cars)
summary(cars)
summary(cars)
summary(cars)
summary(cars)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
anscombe
library(tidyverse)
library(gapminder)
gapminder
install.packages("gapminder")
library(gapminder)
gapminder
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap, y = lifeExp))
p + geom_point()
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap, y = lifeExp))
p + geom_smooth()
p + geom_point() + geom_smooth()
p + geom_smooth()
p + geom_point() + geom_smooth(method = "lm")
p + geom_point() + geom_smooth(method = "gam")
p + geom_point() + geom_smooth(method = "gam") +
scale_x_log10()
p + geom_point() + geom_smooth(method = "gam") +
scale_x_log10(labels = scales::dollar)
p + geom_point() + geom_smooth(method = "gam") +
scale_x_log10()
p + geom_point() + geom_smooth(method = "gam") +
scale_x_log10(labels = scales)
p + geom_point() + geom_smooth(method = "gam") +
scale_x_log10(labels = scales::dollar)
p <-  ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp,
color = continent))
gapminder
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp,
color = "purple"))
p + geom_point()
p + geom_point() +geom_smooth(method = "loess")
p + geom_point() +geom_smooth(method = "loess")+scale_x_log10()
p + geom_point() + geom_smooth()
p  + geom_smooth() + geom_point()
p + geom_point() + geom_smooth()
p  + geom_smooth() + geom_point()
p + geom_point() + geom_smooth()
p  + geom_smooth() + geom_point()
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap, y = lifeExp))
p + geom_point() + geom_smooth()
p  + geom_smooth() + geom_point()
p + geom_point() + geom_smooth(method = "lm")
p + geom_point() + geom_smooth(method = "gam") +
scale_x_log10()
p + geom_point() + geom_smooth()
p  + geom_smooth() + geom_point()
p <-  ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp,
color = continent))
p + geom_point() +
geom_smooth(method = "loess") +
scale_x_log10()
p <-  ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp,
color = continent))
p + geom_point() +
geom_smooth(method = "loess") +
scale_x_log10()
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp,
color = "purple"))
p + geom_point() +
geom_smooth(method = "loess") +
scale_x_log10()
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp,
color = "black"))
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp,
color = "black"))
p + geom_point() +
geom_smooth(method = "loess") +
scale_x_log10()
library(readr)
recent_grads <- read_csv("https://yeabinmoonecon.github.io/ibs_course/BUS240/data/recent_grads.csv")
View(recent_grads)
library(readr)
recent_grads <- read_csv("https://yeabinmoonecon.github.io/ibs_course/BUS240/data/recent_grads.csv")
new_recent_grads <- recent_grads %>%
mutate(
prop_male = Men / Total,
prop_male_gt_half = prop_male > 0.5
)
new_recent_grads
View(new_recent_grads)
1+1
n <- 1
while (100*n^2 > 2^n) {n <- n+1
}
v <- c(your_data_sep_12_2022_0952am$postal_code)
library(readr)
your_data_aug_11_2022_1057am_csv <- read_csv("Downloads/safegraph_data_purchase_aug-11-2022/your_data_aug_11_2022_1057am.csv.gz")
View(your_data_aug_11_2022_1057am_csv)
library(tidyverse)
setwd("~/Documents/ibs_course/BUS240/data")
load('county_map.rda')
load('county_data.rda')
county_full <- left_join(county_map, county_data, by = "id")
orange_pal <- RColorBrewer::brewer.pal(n = 6, name = "Oranges")
orange_pal
orange_rev <- c("#A63603" "#E6550D" "#FD8D3C" "#FDAE6B" "#FDD0A2","#FEEDDE")
orange_pal_rev <- c("#A63603" "#E6550D" "#FD8D3C" "#FDAE6B" "#FDD0A2","#FEEDDE")
gun_p <- ggplot(data = county_full,
mapping = aes(x = long, y = lat,
fill = su_gun6,
group = group))
gun_p1 <- gun_p + geom_polygon(color = "gray90", size = 0.05) + coord_equal()
gun_p1
gun_p2 <- gun_p1 + scale_fill_manual(values = orange_pal)
gun_p2 + labs(title = "Gun-Related Suicides, 1999-2015")
gun_p2 + labs(title = "Gun-Related Suicides, 1999-2015", fill = "Rate per 100,000 pop.")
gun_p2 + labs(title = "Gun-Related Suicides, 1999-2015", fill = "Rate per 100,000 pop.") +  theme_map()
library(ggthemes)
gun_p2 + labs(title = "Gun-Related Suicides, 1999-2015", fill = "Rate per 100,000 pop.") +  theme_map()
gun_p2 + labs(title = "Gun-Related Suicides, 1999-2015", fill = "Rate per 100,000 pop.") +  theme_map() + theme(legend.position = "bottom")
gun_p1
gun_p
gun_p + geom_polygon()
gun_p + geom_polygon() + coord_equal()
library(tidyverse)
#library(ggrepel)
library(ggthemes)
setwd("~/Documents/ibs_course/BUS240/data")
load('county_map.rda')
load('county_data.rda')
county_full <- left_join(county_map, county_data, by = "id")
orange_pal_rev <- c("#A63603" "#E6550D" "#FD8D3C" "#FDAE6B" "#FDD0A2","#FEEDDE")
county_full <- left_join(county_map, county_data, by = "id")
orange_pal_rev <- c("#A63603" "#E6550D" "#FD8D3C" "#FDAE6B" "#FDD0A2","#FEEDDE")
orange_pal_rev <- c("#A63603" "#E6550D" "#FD8D3C" "#FDAE6B" "#FDD0A2","#FEEDDE")
orange_pal_rev <- c("#A63603", "#E6550D", "#FD8D3C", "#FDAE6B", "#FDD0A2","#FEEDDE")
gun_p <- ggplot(data = county_full,
mapping = aes(x = long, y = lat,
fill = su_gun6,
group = group))
gun_p + geom_polygon() + coord_equal()
gun_p1 <- gun_p + geom_polygon(color = "gray90", size = 0.05) + coord_equal()
gun_p1
gun_p2 <- gun_p1 + scale_fill_manual(values = orange_pal)
gun_p2
gun_p2 <- gun_p1 + scale_fill_brewer(palette="Greens")
gun_p2
gun_p2 <- gun_p1 + scale_fill_brewer(palette="Reds")
gun_p2
gun_p2 + labs(title = "Gun-Related Suicides, 1999-2015", fill = "Rate per 100,000 pop.") +  theme_map() + theme(legend.position = "bottom")
pop_p <- ggplot(data = county_full, mapping = aes(x = long, y = lat,
fill = pop_dens6,
group = group))
pop_p1 <- pop_p + geom_polygon(color = "gray90", size = 0.05) + coord_equal()
pop_p2 <- pop_p1 + scale_fill_brewer(palette="Reds")
pop_p2 + labs(title = "Reverse-coded Population Density",
fill = "People per square mile") +
theme_map() + theme(legend.position = "bottom")
View(county_data)
party_colors <- c("#2E74C0", "#CB454A")
p0 <- ggplot(data = subset(county_data,
flipped == "No"),
mapping = aes(x = pop,
y = black/100))
p1 <- p0 + geom_point(alpha = 0.15, color = "gray50") +
scale_x_log10(labels=scales::comma)
p2 <- p1 + geom_point(data = subset(county_data,
flipped == "Yes"),
mapping = aes(x = pop, y = black/100,
color = partywinner16)) +
scale_color_manual(values = party_colors)
p3 <- p2 + scale_y_continuous(labels=scales::percent) +
labs(color = "County flipped to ... ",
x = "County Population (log scale)",
y = "Percent Black Population",
title = "Flipped counties, 2016",
caption = "Counties in gray did not flip.")
p4 <- p3 + geom_text_repel(data = subset(county_data,
flipped == "Yes" &
black  > 25),
mapping = aes(x = pop,
y = black/100,
label = name), size = 2)
library(ggrepel)
party_colors <- c("#2E74C0", "#CB454A")
p0 <- ggplot(data = subset(county_data,
flipped == "No"),
mapping = aes(x = pop,
y = black/100))
p1 <- p0 + geom_point(alpha = 0.15, color = "gray50") +
scale_x_log10(labels=scales::comma)
p2 <- p1 + geom_point(data = subset(county_data,
flipped == "Yes"),
mapping = aes(x = pop, y = black/100,
color = partywinner16)) +
scale_color_manual(values = party_colors)
p3 <- p2 + scale_y_continuous(labels=scales::percent) +
labs(color = "County flipped to ... ",
x = "County Population (log scale)",
y = "Percent Black Population",
title = "Flipped counties, 2016",
caption = "Counties in gray did not flip.")
p4 <- p3 + geom_text_repel(data = subset(county_data,
flipped == "Yes" &
black  > 25),
mapping = aes(x = pop,
y = black/100,
label = name), size = 2)
p4 + theme_minimal() +
theme(legend.position="top")
p1
county_data$su_gun6
View(county_data)
county_data$partywinner12
party_colors <- c("#2E74C0", "#CB454A")
p0 <- ggplot(data = subset(county_data,
partywinner12 == "Republican"),
mapping = aes(x = pop,
y = black/100))
p1 <- p0 + geom_point(alpha = 0.15, color = "gray50") +
scale_x_log10(labels=scales::comma)
p1
p2 <- p1 + geom_point(data = subset(county_data,
flipped == "Yes",
partywinner12 == "Republican"),
mapping = aes(x = pop, y = black/100,
color = partywinner16)) +
scale_color_manual(values = party_colors)
p2
p0 <- ggplot(data = subset(county_data,
partywinner12 == "Republican"),
mapping = aes(x = pop,
y = black/100))
p1 <- p0 + geom_point(alpha = 0.15, color = "gray50") +
scale_x_log10(labels=scales::comma)
p1
party_colors <- c("#2E74C0", "#CB454A")
p0 <- ggplot(data = subset(county_data,
flipped == "No"),
mapping = aes(x = pop,
y = black/100))
p1 <- p0 + geom_point(alpha = 0.15, color = "gray50") +
scale_x_log10(labels=scales::comma)
p2 <- p1 + geom_point(data = subset(county_data,
flipped == "Yes"),
mapping = aes(x = pop, y = black/100,
color = partywinner16)) +
scale_color_manual(values = party_colors)
p3 <- p2 + scale_y_continuous(labels=scales::percent) +
labs(color = "County flipped to ... ",
x = "County Population (log scale)",
y = "Percent Black Population",
title = "Flipped counties, 2016",
caption = "Counties in gray did not flip.")
p4 <- p3 + geom_text_repel(data = subset(county_data,
flipped == "Yes" &
black  > 25),
mapping = aes(x = pop,
y = black/100,
label = name), size = 2)
p4 + theme_minimal() +
theme(legend.position="top")
county_data$pop
summary(county_data$pop)
quantile(county_data$pop)
quantile(county_data$pop)[3]
quantile(county_data$pop)[4]
quant_val <- quantile(county_data$pop)[4]
p0 <- ggplot(data = subset(county_data,
flipped == "No",
pop < quant_val),
mapping = aes(x = pop,
y = black/100))
p1 <- p0 + geom_point(alpha = 0.15, color = "gray50")
p1
quant_val <- quantile(county_data$pop)[3]
p0 <- ggplot(data = subset(county_data,
flipped == "No",
pop < quant_val),
mapping = aes(x = pop,
y = black/100))
p1 <- p0 + geom_point(alpha = 0.15, color = "gray50")
p1
quant_val <- quantile(county_data$pop)[2]
p0 <- ggplot(data = subset(county_data,
flipped == "No",
pop < quant_val),
mapping = aes(x = pop,
y = black/100))
p1 <- p0 + geom_point(alpha = 0.15, color = "gray50")
p1
quant_val <- quantile(county_data$pop)[1]
p0 <- ggplot(data = subset(county_data,
flipped == "No",
pop < quant_val),
mapping = aes(x = pop,
y = black/100))
p1 <- p0 + geom_point(alpha = 0.15, color = "gray50")
p1
quant_val
quant_val <- quantile(county_data$pop)[2]
p0 <- ggplot(data = subset(county_data,
flipped == "No",
pop < quant_val),
mapping = aes(x = pop,
y = black/100))
p1 <- p0 + geom_point(alpha = 0.15, color = "gray50")
p1
p0 <- ggplot(data = subset(county_data,
flipped == "No"),
mapping = aes(x = pop,
y = black/100))
p1 <- p0 + geom_point(alpha = 0.15, color = "gray50")
p1
p1
p0 <- ggplot(data = subset(county_data,
pop < quant_val),
mapping = aes(x = pop,
y = black/100))
p1 <- p0 + geom_point(alpha = 0.15, color = "gray50")
p1
quant_val <- quantile(county_data$pop)[3]
p0 <- ggplot(data = subset(county_data,
pop < quant_val),
mapping = aes(x = pop,
y = black/100))
p1 <- p0 + geom_point(alpha = 0.15, color = "gray50")
p1
p2 <- p1 + geom_point(data = subset(county_data,
flipped == "Yes"),
mapping = aes(x = pop, y = black/100,
color = partywinner16)) +
scale_color_manual(values = party_colors)
p2
p2 <- p1 + geom_point(data = subset(county_data,
flipped == "Yes" & pop < quant_val),
mapping = aes(x = pop, y = black/100,
color = partywinner16)) +
scale_color_manual(values = party_colors)
p2
p3 <- p2 + scale_y_continuous(labels=scales::percent) +
labs(color = "County flipped to ... ",
x = "County Population",
y = "Percent Black Population",
title = "Flipped counties, 2016",
caption = "Counties in gray did not flip.")
p3
p4 <- p3 + geom_text_repel(data = subset(county_data,
flipped == "Yes" &
pop < quant_val),
mapping = aes(x = pop,
y = black/100,
label = name), size = 2)
p4 + theme_minimal() +
theme(legend.position="top")
p5 <- p4 + geom_text_repel(data = subset(county_data,
flipped == "Yes" &
pop < quant_val),
mapping = aes(x = pop,
y = black/100,
label = state), size = 2)
p4 <- p3 + geom_text_repel(data = subset(county_data,
flipped == "Yes" &
pop < quant_val & black  > 25),
mapping = aes(x = pop,
y = black/100,
label = name), size = 2)
p4 + theme_minimal() +
theme(legend.position="top")
p5 <- p4 + geom_text_repel(data = subset(county_data,
flipped == "Yes" &
pop < quant_val& black  > 25),
mapping = aes(x = pop,
y = black/100,
label = state), size = 2)
p5 + theme_minimal() +
theme(legend.position="top")
quant_val2 <- quantile(county_data$pop)[2]
quant_val <- quantile(county_data$pop)[4]
quant_val2 <- quantile(county_data$pop)[2]
p0 <- ggplot(data = subset(county_data,
pop < quant_val),
mapping = aes(x = pop,
y = black/100))
p1 <- p0 + geom_point(alpha = 0.15, color = "gray50")
p2 <- p1 + geom_point(data = subset(county_data,
flipped == "Yes" & pop < quant_val),
mapping = aes(x = pop, y = black/100,
color = partywinner16)) +
scale_color_manual(values = party_colors)
p3 <- p2 + scale_y_continuous(labels=scales::percent) +
labs(color = "County flipped to ... ",
x = "County Population",
y = "Percent Black Population",
title = "Flipped counties, 2016",
caption = "Counties in gray did not flip.")
p3
p4 <- p3 + geom_text_repel(data = subset(county_data,
flipped == "Yes" &
pop < quant_val & black  > 25),
mapping = aes(x = pop,
y = black/100,
label = name), size = 2)
p4 + theme_minimal() +
theme(legend.position="top")
p4 <- p3 + geom_text_repel(data = subset(county_data,
flipped == "Yes" &
pop < quant_val & black  > 25 & pop > quant_val2),
mapping = aes(x = pop,
y = black/100,
label = name), size = 2)
p3
p4 <- p3 + geom_text_repel(data = subset(county_data,
flipped == "Yes" &
pop < quant_val & black  > 25 & pop > quant_val2),
mapping = aes(x = pop,
y = black/100,
label = name), size = 2)
p4 + theme_minimal() +
theme(legend.position="top")
p4 <- p3 + geom_text_repel(data = subset(county_data,
flipped == "Yes" &
pop < quant_val & partywinner16 == "Democrat"),
mapping = aes(x = pop,
y = black/100,
label = name), size = 2)
p4 + theme_minimal() +
theme(legend.position="top")
gun_p <- ggplot(data = county_full,
mapping = aes(x = long, y = lat,
fill = su_gun6,
group = group))
gun_p + geom_polygon() + coord_equal()
gun_p1 <- gun_p + geom_polygon(color = "gray", size = 0.05) + coord_equal()
gun_p1
gun_p1 <- gun_p + geom_polygon( size = 0.05) + coord_equal()
gun_p1
gun_p2 <- gun_p1 + scale_fill_brewer(palette="Reds")
gun_p2
gun_p2 + labs(title = "Gun-Related Suicides, 1999-2015", fill = "Rate per 100,000 pop.") +  theme_map() + theme(legend.position = "bottom")
gun_p1 <- gun_p + geom_polygon( size = 0.1) + coord_equal()
gun_p1
gun_p2 <- gun_p1 + scale_fill_brewer(palette="Reds")
gun_p2
gun_p2 + labs(title = "Gun-Related Suicides, 1999-2015", fill = "Rate per 100,000 pop.") +  theme_map() + theme(legend.position = "bottom")
pop_p <- ggplot(data = county_full, mapping = aes(x = long, y = lat,
fill = pop_dens6,
group = group))
pop_p1 <- pop_p + geom_polygon(color = "gray90", size = 0.05) + coord_equal()
pop_p2 <- pop_p1 + scale_fill_brewer(palette="Reds")
pop_p2 + labs(title = "Reverse-coded Population Density",
fill = "People per square mile") +
theme_map() + theme(legend.position = "bottom")
quantile(county_data$pop)
quantile(county_data$pop)[4]
