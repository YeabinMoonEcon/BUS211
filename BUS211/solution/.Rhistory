10*3
30L
alt <- 77
install.packages("tidyverse")
a<- 10
b <- 20
a<- 10
b <- 20
a<- 10
b <- 20
club_title <- c("Chess Club")
club_description <- c("Meets two nights a week for members to play chess. Snacks are provided.")
club_dues <- c(50, 20, 15)
meeting_days <- c("Monday", "Wednesday")
meeting_times <- c("6:00 pm", "8:00 pm")
# Type your code below
club_meetings <- rbind(meeting_days,meeting_times)
chess_club <- list(club_title,club_description,club_dues,club_meetings)
chess_club
chess_club[2]
chess_club[[2]]
install.packages("rmarkdown")
plot(cars)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
x = 5
x <5
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
summary(cars)
summary(cars)
summary(cars)
summary(cars)
summary(cars)
summary(cars)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
anscombe
library(tidyverse)
library(gapminder)
gapminder
install.packages("gapminder")
library(gapminder)
gapminder
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap, y = lifeExp))
p + geom_point()
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap, y = lifeExp))
p + geom_smooth()
p + geom_point() + geom_smooth()
p + geom_smooth()
p + geom_point() + geom_smooth(method = "lm")
p + geom_point() + geom_smooth(method = "gam")
p + geom_point() + geom_smooth(method = "gam") +
scale_x_log10()
p + geom_point() + geom_smooth(method = "gam") +
scale_x_log10(labels = scales::dollar)
p + geom_point() + geom_smooth(method = "gam") +
scale_x_log10()
p + geom_point() + geom_smooth(method = "gam") +
scale_x_log10(labels = scales)
p + geom_point() + geom_smooth(method = "gam") +
scale_x_log10(labels = scales::dollar)
p <-  ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp,
color = continent))
gapminder
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp,
color = "purple"))
p + geom_point()
p + geom_point() +geom_smooth(method = "loess")
p + geom_point() +geom_smooth(method = "loess")+scale_x_log10()
p + geom_point() + geom_smooth()
p  + geom_smooth() + geom_point()
p + geom_point() + geom_smooth()
p  + geom_smooth() + geom_point()
p + geom_point() + geom_smooth()
p  + geom_smooth() + geom_point()
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap, y = lifeExp))
p + geom_point() + geom_smooth()
p  + geom_smooth() + geom_point()
p + geom_point() + geom_smooth(method = "lm")
p + geom_point() + geom_smooth(method = "gam") +
scale_x_log10()
p + geom_point() + geom_smooth()
p  + geom_smooth() + geom_point()
p <-  ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp,
color = continent))
p + geom_point() +
geom_smooth(method = "loess") +
scale_x_log10()
p <-  ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp,
color = continent))
p + geom_point() +
geom_smooth(method = "loess") +
scale_x_log10()
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp,
color = "purple"))
p + geom_point() +
geom_smooth(method = "loess") +
scale_x_log10()
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp,
color = "black"))
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp,
color = "black"))
p + geom_point() +
geom_smooth(method = "loess") +
scale_x_log10()
library(readr)
recent_grads <- read_csv("https://yeabinmoonecon.github.io/ibs_course/BUS240/data/recent_grads.csv")
View(recent_grads)
library(readr)
recent_grads <- read_csv("https://yeabinmoonecon.github.io/ibs_course/BUS240/data/recent_grads.csv")
new_recent_grads <- recent_grads %>%
mutate(
prop_male = Men / Total,
prop_male_gt_half = prop_male > 0.5
)
new_recent_grads
View(new_recent_grads)
1+1
covid_df <- read_csv("covid19.csv")
library(tidyverse)
covid_df <- read_csv("covid19.csv")
setwd("~/Documents/ibs_course/BUS211/solution")
setwd("~/Documents/ibs_course/BUS211/solution")
library(tidyverse)
setwd("~/Documents/ibs_course/BUS211/solution")
covid_df <- read_csv("covid19.csv")
data.frame(covid_df)
View(covid_df)
View(covid_df)
view(covid_df)
library(tidyverse)
setwd("~/Documents/ibs_course/BUS211/solution")
covid_df <- read_csv("covid19.csv")
#Create a dataset
Covid19 <- data.frame(covid_df)
#Group the tested positive and the total positive
Covid19_group <- Covid19 %>%
group_by(Country_Region) %>%
sumarise(
tested=sum(total_tested),
positive = sum(positive),
)%>%
arrange(-positive)
#Create a dataset
Covid19 <- data.frame(covid_df)
Covid19_group <- Covid19 %>%
group_by(Country_Region) %>%
sumarise(
tested=sum(total_tested),
positive = sum(positive),
)%>%
arrange(-positive)
#Group the tested positive and the total positive
Covid19_group <- Covid19 %>%
group_by(Country_Region) %>%
sumarise(
tested=sum(total_tested),
positive = sum(positive)
)%>%
arrange(-positive)
Covid19_group <- Covid19 %>%
group_by(Country_Region) %>%
sumarise(
tested=sum(total_tested),
positive = sum(positive)
)%>%
arrange(-positive)
sumarise
covid_df <- read_csv("covid19.csv")
library(tidyverse)
library(dplyr)
#import the dataset
setwd("~/Documents/ibs_course/BUS211/solution")
covid_df <- read_csv("covid19.csv")
#Brief viewing the data
head(covid19)
library(tidyverse)
library(dplyr)
#import the dataset
setwd("~/Documents/ibs_course/BUS211/solution")
covid19 <- read_csv("covid19.csv")
#Brief viewing the data
head(covid19)
covid19.1<-covid19%>%
select(Country_Region,Province_State,positive,total_tested, Date)%>%
summarize(allps=(Province_State=="All States"),
Country_Region=Country_Region,
positive=positive,
total_tested=total_tested,
Date=Date)%>%
#assign all the FAlSE in allps column as na
mutate(allps=na_if(allps, FALSE))%>%
mutate(total_tested=na_if(total_tested, 0))
#check amount of na values in each category
covid19.1%>%summarise_all(~sum(is.na(.)))
#drop all na values
ccovid19<-covid19.1%>%drop_na()
#check are there any non na value left
dim(ccovid19)
#check amount of na values after the drop
ccovid19%>%summarise_all(~sum(is.na(.)))
### In certain countries, there are data counts states or region separately which we would not using
### calculating the positive-tested ratio. Therefore, I dropped the data other than "All States"
### under Province_State column.
bar.1<-ggplot(ccovid19, aes(x = reorder(Country_Region,
Country_Region,
length))) +
geom_bar(fill = "coral") +
theme(axis.text.x = element_text(angle = 45,
vjust = 1,
hjust=1))
bar.1
### I created a bar chart to have a general view of existed counts for quantitative categorical
### variable, Country_Region.
c<-ccovid19%>%
group_by(Country_Region)%>%
count(Country_Region)%>%
summarize(c1=(n>=50),
n=n,
Country_Region=Country_Region)%>%
mutate(c1=na_if(c1, FALSE))%>%
drop_na()
cccr<-c[,"Country_Region"]
### Since the data collected from 20th of January to the 1st of June 2020, I assume that any country
### with under 50 observations is not representative. Therefore, I dropped them from the data frame.
ccovid19.1<-ccovid19%>%
#transfer all values under positive and total_tested column to numeric
mutate(positive=as.numeric(positive),
total_tested=as.numeric(total_tested))%>%
#select out highest positive and total_tested by country
group_by(Country_Region, Date)%>%
summarize(ptratio=positive/total_tested)%>%
#arrange in descending order
mutate(ptratio=na_if(ptratio, 1))%>%
drop_na()%>%
arrange(desc(ptratio))
#find the country name in the first row
ct<-ccovid19.1[8,"Country_Region"]
#print the country name
ct
### Then I calculated the positive-tested ratio for each date and put them in descending order. I also
### dropped the data if p-t ratio is equal to 1, since there is not a significant meaning contributed to
### this question. After that I print out the sheet, we can see the top three countries are Tanzania,
### Philippines and Burkina Faso. All of these three countries have less than 50 observations, therefore
### the result is not representative. Hence, the country with highest positive-tested ratio is United-States.
