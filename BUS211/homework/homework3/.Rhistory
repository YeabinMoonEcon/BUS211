list("harvard", 1, 1, 1, 1, 3, TRUE)
str_pad("2419", width = 7, side = "left", pad="0")
library(tidyverse)
str_pad("2419", width = 7, side = "left", pad="0")
recent_grads <- read_csv("https://yeabinmoonecon.github.io/ibs_course/BUS240/data/recent_grads.csv", col_types = =cols())
recent_grads <- read_csv("https://yeabinmoonecon.github.io/ibs_course/BUS240/data/recent_grads.csv", col_types = cols())
colnames(recent_grads) <- tolower(colnames(recent_grads))
View(recent_grads)
recent_grads %>%
mutate(formatted_major_code = str_pad(major_code, width = 7,side = "left", pad ="0"))
recent_grads <- recent_grads %>%
mutate(formatted_major_code = str_pad(major_code, width = 7,side = "left", pad ="0"))
View(recent_grads)
head(recent_grads)
recent_grads %>%
mutate(is_arts = str_detect(Major, "ARTS"))
recent_grads$Major
recent_grads$major
recent_grads %>%
mutate(is_arts = str_detect(major, "ARTS"))
recent_grads <- read_csv("https://yeabinmoonecon.github.io/ibs_course/BUS240/data/recent_grads.csv", col_types = cols())
recent_grads$major
recent_grads$Major
recent_grads$Major_category
str_replace_all(recent_grads$Major_category, pattern = "Engineering", replacement = "Engr.")
str_replace_all(recent_grads$Major_category, pattern = "Engineering", replacement = "Engr.")
recent_grads$Major_category <- str_replace_all(recent_grads$Major_category, pattern = "Engineering", replacement = "Engr.")
library(tidyverse)
library(gapminder)
knitr::opts_chunk$set(echo = TRUE, fig.width = 8, fig.height = 5)
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp,
color = year
)
p + geom_point() +
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp,
color = year))
p + geom_point() +
geom_smooth(method = "loess") + scale_x_log10()
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp,
color = factor(year)))
p + geom_point() +
geom_smooth(method = "loess") + scale_x_log10()
gapminder$year
factor(gapminder$year)
words <- "dq is awesome"
words
words[[2]]
words[[1]]
words[[1]][2]
library(tidyverse)
str_sub(words, 1, 9)
input_sentence <- "You'll need to split this sentence."
output1 <- str_split(input_sentence)
library(tidyverse)
output1 <- str_split(input_sentence, " ")
output1
output1 <- str_split(input_sentence, " ")[[1]]
output1
source("~/.active-rstudio-document", echo=TRUE)
if (major == "Chemistry") {print("good")}
else {print("bad")}
if (major == "Chemistry") {print("good")}
else {print("bad")}
if (major == "Chemistry") {print("good")} +
else {print("bad")}
if (major == "Chemistry") {print("good")}
+else {print("bad")}
if (major == "Chemistry") {print("good")}  +
else {print('k')}
if (major == "Chemistry") {print("good")
} else {print("bad")}
x <- 7
x > 5 & x < 10
x > 5 && x < 10
a <- 1:3
b <- 4:6
a>2
a>2 && b >5
b >5
a>2
a>2 | b >5
a>2 & b >5
a>2 && b >5
library(tidyverse)
date1 <- "20/04/21"
date2 <- "04-21-20"
ymd(date1)
library(lubridate)
ymd(date1)
mdy(date1)
ymd(date1)
mdy(date1)
mdy(date2)
date1 <- "01011970" # should be January 1, 1970
date2 <- "2019-03-04" # should be March 4, 2019
date_standardized1 <- mdy(date1)
date_standardized2 <- ymd(date2)
date_standardized1
datetime1 <- "01-01-1970-00-00-00" # should be January 1, 1970 at midnight
datetime2 <- "2019-03-14 1:59 AM" # should be March 14, 2019, 1:59 AM
mdy(datetime1)
datetime1 <- "01-01-1970-00-00-00" # should be January 1, 1970 at midnight
datetime2 <- "2019-03-14 1:59 AM" # should be March 14, 2019, 1:59 AM
mdy(datetime1)
mdy_hms(datetime1)
ymd_hm(datetime2)
Sys.time()
now <- Sys.time()
now %>% ymd_hms()
now <- Sys.time()
now %>% ymd_hms()
now %>% ymd_hms() %>% as.numeric()
ymd("2020-04-21")
date<-ymd("2020-04-21")
date[year]
year(date)
month(date)
day(date)
wday(date)
Sys.time()
ymd_hms(Sys.time())
date<- ymd_hms(Sys.time())
month(date)
wday(date)
wday(date, label = TRUE)
yday(date, label = TRUE)
yday(date)
now <- Sys.time()
now
ymd("2015-03-01")
now - ymd("2015-03-01")
now
ymd("2015-03-01")
ymd(now)
duration(day = 1, hour = 1)
duration(day = 1, hour = 1, minute = 30
duration(day = 1, hour = 1, minute = 300)
duration(day = 1, hour = 1, minute = 300)
now+duration(day = 1, hour = 1, minute = 300)
c(1,2,2)
1:10
rep(4, times = 10)
seq1 <- rep(4, times = 10)
seq2 <- 1:12
seq(from = 2.0, to = 5.50, by =0.25)
seq3 <- seq(from = 2.0, to = 5.50, by = 0.25)
math_grades <- c(92L, 87L, 85L)
exam_grades <- c(92, 90, 84, 95, 77, 92, 85)
math_grades
exam_grades
math_grades[1]
exam_grades[2,3,6]
2,3,6
exam_grades[c(2,3,6)]
3:7
exam_grades[3:7]
exam_grades[2,3,6]
2,3,6
3:7
1989
class(1989)
1989L
class(1989L)
class(1L + 1)
math_grades <- c(92L, 87L, 85L)
exam_grades <- c(92, 90, 84, 95, 77, 92, 85)
is_stem_classes <- c(TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE)
math_grades[2]
math_grades[2] <- 80L
math_grades
exam_grades
exam_grades[is_stem_classes]
exam_grades[is_stem_classes] <- 99
exam_grades[is_stem_classes]
exam_grades
math_grades <- c(92L, 87L, 85L)
exam_grades <- c(92, 90, 84, 95, 77, 92, 85)
math_grades[-1]
math_grades[-1]
new_math_grades <- math_grades[-1]
math_grades
exam_grades[c(-3,-5,-7)]
exam_grades >= 90
exam_grades[exam_grades >= 90]
exam_grades    <- c(92, 90, 84, 95, 77, 92, 85)
homework_grades<- c(87, 81, 95, 86, 85, 90, 88)
project_grades <- c(85, 92, 79, 93, 90, 91, 95)
exam_grades <- c(92, 90, 84, 95, 77, 92, 85)
class_names <- c("math", "chemistry", "writing", "art", "history", "music", "physical_education")
exam_grades <- c(92, 90, 84, 95, 77, 92, 85)
names(exam_grades)
names(exam_grades)<-class_names
exam_grades
exam_grades
exam_grades[1]
exam_grades['math']
exam_grades[92]
vector_1 <- c(1, 4, 5, 9)
vector_2 <- 1:12
vector_3 <- seq(from = 2.0, to = 5.50, by = 0.25)
matrix_1 <- matrix(vector_1, nrow = 2, ncol = 2)
matrix_1
matrix_2 <- matrix(vector_2, nrow = 3)
matrix_2
matrix_3 <- matrix(vector_3, nrow = 5, byrow = TRUE)
matrix_3
matrix(vector_3, nrow = 5, byrow = F)
world_rank <- c(1, 2, 3, 4, 5, 6)
quality_of_education <- c(1, 9, 3, 2, 7, 13)
influence <- c(1, 3, 2, 6, 12, 13)
broad_impact <- c(1, 4, 2, 13, 9, 12)
patents <- c(3, 10, 1, 48, 15, 4)
colum_stack <- cbind(world_rank,quality_of_education,influence,broad_impact,patents)
row_stack <- rbind(world_rank,quality_of_education,influence,broad_impact,patents)
colum_stack
school_names <- c("harvard", "stanford", "MIT", "cambridge", "oxford", "columbia")
rownames(colum_stack) <- school_names
university_matrix <- colum_stack
university_matrix
university_matrix[columbia, ]
university_matrix['columbia', ]
university_matrix['columbia', 'influence']
university_matrix['cambridge',]
university_matrix[,'world_rank']
university_matrix
university_matrix[c('harvard','MIT'),]
university_matrix[c('harvard','MIT','cambridge'),]
university_matrix[c('harvard','MIT','cambridge'),c('world_rank','broad_impact')]
usa_universities <- c(TRUE, TRUE, TRUE, FALSE, FALSE, TRUE)
university_matrix[usa_universities,]
university_matrix[usa_universities,c('world_rank','patents')]
university_matrix
tuition <- c(43280, 45000, 45016, 49350, 28450, 55161)
cbind(university_matrix,tuition)
new_matrix <- cbind(university_matrix,tuition)
new_matrix
california <- c(7, 5, 4, 7, 29, 43176)
rbind(new_matrix, california)
new_matrix <- rbind(new_matrix, california)
new_matrix
complete_university_matrix <- new_matrix
complete_university_matrix
complete_university_matrix[,-1]
complete_university_matrix[,c(-'world_rank')]
complete_university_matrix[,c('world_rank')]
complete_university_matrix[,c(-1)]
complete_university_matrix[,c(-2,-5)]
complete_university_matrix[broad_impact <= 10,c(-2,-5)]
complete_university_matrix['harvard',]
mean(complete_university_matrix['harvard',])
mean(complete_university_matrix['harvard',-1])
complete_university_matrix['harvard',-1]
complete_university_matrix['harvard',-6]
mean(complete_university_matrix['harvard',-6])
complete_university_matrix[,-6]
rowMeans(complete_university_matrix[,-6])
colMeans(complete_university_matrix[,-6])
list(“ballroom dancing”, “rugby”, “bird watching”, “pottery”)
list("ballroom dancing", "rugby", "bird watching", "pottery")
university_clubs <- list("ballroom dancing", "rugby", "bird watching", "pottery")
mit_list<- list("MIT", c(3,3,2,2,1), TRUE)
mit_list
mit_named_list <- list(name = "MIT", ranking= c(3,3,2,2,1), is_in_usa=  TRUE)
mit_named_list
library(readr)
complaints <- read_csv("Downloads/complaints.csv")
View(complaints)
library(tidyverse)
setwd("~/Downloads/pattern")
setwd("~/Downloads/pattern")
library(RSQLite)
con <- dbConnect(SQLite(),
dbname = "tweater",
host = "courses.csrrinzqubik.us-east-1.rds.amazonaws.com",
port = 3306,
user = "student",
password = "datacamp")
dbListTables(con)
con <- dbConnect(RMySQL::MySQL(),
dbname = "tweater",
host = "courses.csrrinzqubik.us-east-1.rds.amazonaws.com",
port = 3306,
user = "student",
password = "datacamp")
library(DBI)
con <- dbConnect(RMySQL::MySQL(),
dbname = "tweater",
host = "courses.csrrinzqubik.us-east-1.rds.amazonaws.com",
port = 3306,
user = "student",
password = "datacamp")
con <- dbConnect(RMySQL::MySQL(),
dbname = "tweater",
host = "courses.csrrinzqubik.us-east-1.rds.amazonaws.com",
port = 3306,
user = "student",
password = "datacamp")
setwd("~/Documents/ibs_course/BUS211/homework/homework3") # Set your path
sat_results <- read_csv('sat_results_1.csv')
library(tidyverse)
setwd("~/Documents/ibs_course/BUS211/homework/homework3") # Set your path
sat_results <- read_csv('sat_results_1.csv')
ap_2010 <- read_csv('ap_2010_1.csv')
class_size <- read_csv('class_size_1.csv')
demographics <- read_csv('demographics_1.csv')
graduation <- read_csv('graduation_1.csv')
hs_directory <- read_csv('hs_directory_1.csv')
graduation <- graduation %>%
mutate(`Total Grads - % of cohort` = parse_number(`Total Grads - % of cohort`),
`Dropped Out - % of cohort` = parse_number(`Dropped Out - % of cohort`))
hs_directory <- hs_directory %>%
separate(col = `Location 1`,
into = c("string_1", "string_2", "string_3" ),
sep = "\n") %>%
select(-string_1, -string_2) %>%
rename(lat_long = string_3)
hs_directory <- hs_directory %>%
separate(col = lat_long,
into = c("lat", "long"),
sep = ",")
hs_directory <- hs_directory %>%
mutate(lat = str_sub(lat, 2, -1), long = str_sub(long, 1, -2))%>%
mutate(across(c(lat, long), as.numeric))
hs_directory
class_size <- class_size %>%
mutate(DBN = str_c(CSD, `SCHOOL CODE`, sep = "")) %>%
mutate(DBN = str_pad(DBN, width = 6, side = 'left', pad = "0"))
class_size
View(class_size)
class_size <- read_csv('class_size_1.csv')
class_size %>%
mutate(DBN = str_c(CSD,`SCHOOL CODE`)) %>%
mutate(DBN = str_pad(DBN, width = 6, side = 'left', pad = "0"))
a<-class_size %>%
mutate(DBN = str_c(CSD,`SCHOOL CODE`)) %>%
mutate(DBN = str_pad(DBN, width = 6, side = 'left', pad = "0"))
View(a)
hs_directory
library(tidyverse)
setwd("~/Documents/ibs_course/BUS211/homework/homework3") # Set your path
sat_results <- read_csv('sat_results_1.csv')
ap_2010 <- read_csv('ap_2010_1.csv')
class_size <- read_csv('class_size_1.csv')
demographics <- read_csv('demographics_1.csv')
graduation <- read_csv('graduation_1.csv')
hs_directory <- read_csv('hs_directory_1.csv')
hs_directory %>%
separate(col =  'Location 1',
into = c("Adress", "Town", "Coordinates"), # the names of new columns
sep = "\n") %>%
separate(col =  'Coordinates',
into = c("Latitude", "Longitude"), # the names of new columns
sep = ",")# the separator of string
View(hs_directory)
hs_directory_new <-
hs_directory %>%
separate(col =  'Location 1',
into = c("string_1", "string_2", "string_3"), # the names of new columns
sep = "\n")  %>%
select(-"string_1", -"string_2") %>%
rename("lat_long" = "string_3")
View(hs_directory_new)
graduation <- read_csv('graduation_1.csv')
graduation
as.data.frame(graduation)
g<-as.data.frame(graduation)
View(g)
View(graduation)
class(g)
class(graduation)
graduation <- read_csv('graduation_1.csv')
graduation
graduation <- graduation %>%
mutate(across(3:4, as.numeric))
glimpse(graduation)
View(graduation)
graduation <- read_csv('graduation_1.csv')
graduation_clean_2 <- graduation %>%
mutate(across(contains("- % of cohort"), as.numeric))
View(graduation_clean_2)
graduation <- read_csv('graduation_1.csv')
View(graduation)
hs_directory
hs_directory <- hs_directory %>%
separate(col = lat_long,
into = c("lat", "long"),
sep = ",")
hs_directory
hs_directory <- hs_directory %>%
mutate(lat = str_sub(lat, 2, -1), long = str_sub(long, 1, -2))%>%
mutate(across(c(lat, long), as.numeric))
hs_directory
hs_directory <- read_csv('hs_directory_1.csv')
hs_directory <- hs_directory %>%
separate(col = `Location 1`,
into = c("string_1", "string_2", "string_3" ),
sep = "\n") %>%
select(-string_1, -string_2) %>%
rename(lat_long = string_3)
hs_directory <- hs_directory %>%
separate(col = lat_long,
into = c("lat", "long"),
sep = ",")
hs_directory
hs_directory <- hs_directory %>%
mutate(lat = str_sub(lat, 2, -1), long = str_sub(long, 1, -2))%>%
mutate(across(c(lat, long), as.numeric))
hs_directory
hs_directory <- read_csv('hs_directory_1.csv')
hs_directory <- hs_directory %>%
separate(col = `Location 1`,
into = c("string_1", "string_2", "string_3" ),
sep = "\n") %>%
select(-string_1, -string_2) %>%
rename(lat_long = string_3)
hs_directory <- hs_directory %>%
separate(col = lat_long,
into = c("lat", "long"),
sep = ",")
hs_directory
hs_directory
hs_directory <- hs_directory %>%
mutate(lat = str_sub(lat, 2, -1), long = str_sub(long, 1, -2))%>%
mutate(across(c(lat, long), as.numeric))
hs_directory
class_size <-class_size %>% mutate(DBN=str_pad(paste0(`CSD`,`SCHOOL CODE`), width=6, side=c('left'), pad='0'))
View(class_size)
hs_directory <- read_csv('hs_directory_1.csv')
hs_directory_new <- hs_directory %>%
separate(col = "Location1" ,
into = c("string_1", "string_2", "string_3"), sep = `\\\` )
View(hs_directory_new)
.
/
end
)
hs_directory <- read_csv('hs_directory_1.csv')
hs_directory_new <- hs_directory %>% separate(col = `Location 1`, into = c("string_1", "string_2", "string_3"), sep = "\\n")
View(hs_directory_new)
class_size <- read_csv('class_size_1.csv')
class_size_new <- class_size %>%
mutate(across(`CSD` :`SCHOOL CODE`, as.character)) %>%
mutate(CSD = str_pad(`CSD`,width = 2, side = 'left', pad = '0'))
View(class_size_new)
class_size <- read_csv('class_size_1.csv')
class_size$DBN<-paste0('0',class_size$`CSD`,class_size$`SCHOOL CODE`)
View(class_size)
library(tidyverse)
setwd("~/Documents/ibs_course/BUS211/homework/homework3") # Set your path
sat_results <- read_csv('sat_results_1.csv')
ap_2010 <- read_csv('ap_2010_1.csv')
class_size <- read_csv('class_size_1.csv')
demographics <- read_csv('demographics_1.csv')
graduation <- read_csv('graduation_1.csv')
hs_directory <- read_csv('hs_directory_1.csv')
class_size <-
class_size %>%
mutate(
DBN = paste0(`CSD`,`SCHOOL CODE`)
)
View(class_size)
class_size <-
class_size %>%
mutate(
DBN = if_else(
nchar(DBN)==5,
str_pad(DBN, width=6,side="left",pad="0"),
DBN))
View(class_size)
library(tidyverse)
setwd("~/Documents/ibs_course/BUS211/homework/homework3") # Set your path
sat_results <- read_csv('sat_results_1.csv')
ap_2010 <- read_csv('ap_2010_1.csv')
class_size <- read_csv('class_size_1.csv')
demographics <- read_csv('demographics_1.csv')
graduation <- read_csv('graduation_1.csv')
hs_directory <- read_csv('hs_directory_1.csv')
numnew_graduation <- new_graduation %>%
mutate(`Total Grads - % of cohort` = as.numeric(`Total Grads - % of cohort`),
`Dropped Out - % of cohort` = as.numeric(`Dropped Out - % of cohort`))
library(tidyverse)
setwd("~/Documents/ibs_course/BUS211/homework/homework3") # Set your path
sat_results <- read_csv('sat_results_1.csv')
ap_2010 <- read_csv('ap_2010_1.csv')
class_size <- read_csv('class_size_1.csv')
demographics <- read_csv('demographics_1.csv')
graduation <- read_csv('graduation_1.csv')
hs_directory <- read_csv('hs_directory_1.csv')
new_graduation <- graduation %>%
mutate(across(`Total Grads - % of cohort`:`Dropped Out - % of cohort`, parse_number))
numnew_graduation <- new_graduation %>%
mutate(`Total Grads - % of cohort` = as.numeric(`Total Grads - % of cohort`),
`Dropped Out - % of cohort` = as.numeric(`Dropped Out - % of cohort`))
glimpse(numnew_graduation)
View(numnew_graduation)
numnew_graduation <- new_graduation %>%
mutate(`Total Grads - % of cohort` = as.numeric(`Total Grads - % of cohort`),
`Dropped Out - % of cohort` = as.numeric(`Dropped Out - % of cohort`))
glimpse(numnew_graduation)
graduation_clean <- graduation %>%
mutate(
across(c('Total.Grads.....of.cohort',
'Dropped.Out.....of.cohort'), as.numeric)
)
View(graduation_clean_2)
sapply(graduation_clean,class)
